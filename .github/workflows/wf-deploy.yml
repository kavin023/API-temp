name: release-pipeline sap-zendesk
on:
  push:
  
   branches: [ master ]
permissions:
  id-token: write
  contents: read

jobs:
  Build-and-DeployQA:
  
    runs-on: windows-latest
    env:
     ENV_RESOURCEGROUP: rg-weu-zendesk-sap
     ENV_RESOURCEGROUPLOCATION: westeurope
    steps:
     
     # Checkout code
    - uses: actions/checkout@main
     
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_TEST }}
  
    - name: 'Run Azure CLI commands'
      run: |
          az account show
          az group list
          pwd 
  
          
    - name: Create project folder
      run: |
       mkdir output
        cp 'ZendeskSapRefunds/host.json' 'output/'
        #cp 'proxies.json' 'output/'
        cp 'ZendeskSapRefunds/connections.json' 'output/'
      
         #cp 'ZendeskSapRefunds/parameters.json' 'output/'
        cp -r 'ZendeskSapRefunds/wf-zendesk-sap' 'output/'
        #cp 'ZendeskSapRefunds/parameters.json' 'output/'
      
      

    - name: Easy Zip Files
      uses: vimtor/action-zip@v1
      with:
        dest: '${{ github.run_id }}.zip'
        files: output/
        
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{secrets.LA_NAME_QA}}
        package: '${{ github.run_id }}.zip'
        publish-profile: ${{secrets.TEST_PROFILE}}
        
  VerifyDeployment:
    name: Verify Deployment
    runs-on: windows-latest
    environment: 'Test'
    needs: [Build-and-DeployQA]

    steps:
     - uses: actions/checkout@v2
     - uses: actions/setup-node@v1
       with:
        node-version: '12.x'
     - name: Manually test the interface from PostMan      
       run: |
        
        echo "::send message from Post Man and verify"

  build-and-deploy-prd:
    runs-on: windows-latest
    needs: [Build-and-DeployQA,VerifyDeployment]
     
    
    env:
     ENV_RESOURCEGROUP: rg-weu-zendesk-sap
     ENV_RESOURCEGROUPLOCATION: westeurope
  
    steps:
     
           # Checkout code
    - uses: actions/checkout@main
     
    - name: 'Az CLI login'
      uses: Azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{secrets.AZURE_SUBSCRIPTION_PROD}}
  
    - name: 'Run Azure CLI commands'
      run: |
          az account show
          az group list
          pwd 
          
  

    - name: Create project folder
      run: |
       mkdir output
        cp 'ZendeskSapRefunds/host.json' 'output/'
        #cp 'proxies.json' 'output/'
        cp 'ZendeskSapRefunds/Prodconnection/connections.json' 'output/'
       
         #cp 'ZendeskSapRefunds/parameters.json' 'output/'
        cp -r 'ZendeskSapRefunds/wf-zendesk-sap' 'output/'
        #cp 'ZendeskSapRefunds/Prodconnection/parameters.json' 'output/'
   
    
      

    - name: Easy Zip Files
      uses: vimtor/action-zip@v1
      with:
        dest: '${{ github.run_id }}.zip'
        files: output/
        
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{secrets.LA_NAME_PROD}}
        package: '${{ github.run_id }}.zip'
        publish-profile: ${{secrets.PRD_PROFILE}}

  Jira_integration:
   
          runs-on: ubuntu-latest
          needs: [Build-and-DeployQA,VerifyDeployment,build-and-deploy-prd]
          outputs:
             data: ${{ steps.create-ticket.outputs.data }}
          steps:
          - uses: actions/checkout@v2
    
          - run:  |
         
             curl -XPOST -H "Authorization: Bearer ${{secrets.Token}}" -H "Content-type: application/json" -d "[{\"commit\":\"$GITHUB_SHA\", \"repository\": \"tomtom-internal/integrate-zendesk-saprefund\"}]" https://tomtom.service-now.com/api/x_ttib2_rapdev_s/deploycommit
              
    
